/**
 * The Least Weasel Organisation
 * Copyright (C) 2004-2014 by Andrew Gillies
 */
package org.leastweasel.predict.domain;

import java.io.Serializable;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;

/**
 * A prediction, made by a {@link User player}, of the expected outcome of a {@link Fixture}.
 */
@Entity
public class Prediction implements Serializable {

	private static final long serialVersionUID = 1L;

	private Long id;

    private Fixture fixture;

    private MatchResult predictedResult;

    private User predictor;

    /**
     * Get the prediction's unique id (generated by its data source). Will be null if not persistent.
     */
    @Id
    @GeneratedValue
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Get the fixture for which this is a prediction.
     * 
     * @return the predicted fixture
     */
    @ManyToOne
    @JoinColumn(name="fixture_id")
	public Fixture getFixture() {
		return fixture;
	}

	public void setFixture(Fixture fixture) {
		this.fixture = fixture;
	}

	/**
	 * Get the {@link MatchResult} that the player is predicting.
	 * 
	 * @return the predicted result
	 */
	public MatchResult getPredictedResult() {
		return predictedResult;
	}

	public void setPredictedResult(MatchResult predictedResult) {
		this.predictedResult = predictedResult;
	}

	/**
	 * Get the predictor (the user making the prediction).
	 * 
	 * @return the predicting user
	 */
    @ManyToOne
    @JoinColumn(name="user_id")
	public User getPredictor() {
		return predictor;
	}

	public void setPredictor(User predictor) {
		this.predictor = predictor;
	}
	
    /**
     * Format the object as a String.
     * 
     * @return the generated String
     */
    public String toString() {
        StringBuilder buff = new StringBuilder();

        buff.append(fixture);
        buff.append("\nPredicted: ");
        buff.append(predictedResult);
        buff.append(", by '");
        buff.append(predictor.getName());
        buff.append("'");

        return buff.toString();
    }
}
